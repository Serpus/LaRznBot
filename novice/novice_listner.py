import sqlite3

import openpyxl
from aiogram import types, F, Router
from aiogram.types import ReactionTypeEmoji

from bot_logger import log


def register(router: Router):
    @router.message(F.text.startswith("–ù–æ–≤—ã–π –æ—Ç–≤–µ—Ç –≤ –æ–ø—Ä–æ—Å–µ: –ê–Ω–∫–µ—Ç–∞ –¥–æ–±—Ä–æ–≤–æ–ª—å—Ü–∞ –î–ü–°–û"))
    async def handler(message: types.Message):
        lines = message.text.strip().split('\n')
        answers = {}
        current_q = None
        for line in lines:
            line = line.strip()
            if line.startswith("Q:"):
                current_q = line[3:].strip()
            elif line.startswith("A:"):
                answers[current_q] = line[3:].strip()
        log(f"–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞: {answers}")
        save_to_db(answers)
        await save_to_excel(answers, message)
        await message.react(reaction=[ReactionTypeEmoji(emoji="üëæ")])

    async def save_to_excel(answers, message: types.Message):
        full_name = answers.get("–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ", "")
        location = answers.get("–ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç (–≥–æ—Ä–æ–¥, –ø–æ—Å–µ–ª–æ–∫+—Ä–∞–π–æ–Ω, –¥–µ—Ä–µ–≤–Ω—è+—Ä–∞–π–æ–Ω)", "")
        phone = answers.get("–¢–µ–ª–µ—Ñ–æ–Ω (–ø—Ä–æ—Å—å–±–∞ –ø–∏—Å–∞—Ç—å —á–µ—Ä–µ–∑ 8, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)", "")
        telegram = answers.get("–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º", "")

        file_name = "novice/–ù–æ–≤–∏—á–∫–∏.xlsx"
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
            wb = openpyxl.load_workbook(file_name)
        except FileNotFoundError as e:
            log(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª {file_name}")
            await message.react(reaction=[ReactionTypeEmoji(emoji="üò°")])
            raise e
        ws = wb.active
        ws.append([None, location, full_name, "", int(phone), telegram])
        wb.save(file_name)

    def save_to_db(answers):
        conn = sqlite3.connect("db/novice.db")
        try:
            cursor = conn.cursor()

            full_name = answers.get("–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ", "")
            age = answers.get("–í–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç?", "")
            location = answers.get("–ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç (–≥–æ—Ä–æ–¥, –ø–æ—Å–µ–ª–æ–∫+—Ä–∞–π–æ–Ω, –¥–µ—Ä–µ–≤–Ω—è+—Ä–∞–π–æ–Ω)", "")
            phone = answers.get("–¢–µ–ª–µ—Ñ–æ–Ω (–ø—Ä–æ—Å—å–±–∞ –ø–∏—Å–∞—Ç—å —á–µ—Ä–µ–∑ 8, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)", "")
            telegram = answers.get("–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º", "")
            has_car = answers.get("–ù–∞–ª–∏—á–∏–µ –∞–≤—Ç–æ", "")
            previous_searches = answers.get("–£—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –ª–∏ –í—ã —Ä–∞–Ω–µ–µ –≤ –ø–æ–∏—Å–∫–∞—Ö –ø—Ä–æ–ø–∞–≤—à–∏—Ö?", "")
            help_types = answers.get("–í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–º–æ—â–∏", "")
            how_learned = answers.get("–ö–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –æ–± –æ—Ç—Ä—è–¥–µ?", "")
            other_info = answers.get("–ü–æ –∂–µ–ª–∞–Ω–∏—é, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–µ–ª–∏ –±—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ, —á–µ–≥–æ –Ω–µ—Ç –≤ –∞–Ω–∫–µ—Ç–µ", "")

            cursor.execute('''
                    INSERT INTO novice (full_name, age, location, phone, telegram, has_car, previous_searches, help_types, how_learned, other_info)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                ''', (full_name, age, location, phone, telegram, has_car, previous_searches, help_types, how_learned,
                      other_info))

            conn.commit()
        finally:
            conn.close()
